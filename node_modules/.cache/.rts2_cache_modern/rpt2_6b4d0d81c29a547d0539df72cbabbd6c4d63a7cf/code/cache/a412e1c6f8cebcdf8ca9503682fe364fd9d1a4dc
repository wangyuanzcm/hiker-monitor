{"code":"import { WP } from '../data/constants';\r\nimport { isPerformanceSupported } from '../helpers/isSupported';\r\n/**\r\n * Navigation Timing API provides performance metrics for HTML documents.\r\n * w3c.github.io/navigation-timing/\r\n * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\r\n */\r\nexport const getNavigationTiming = () => {\r\n    if (!isPerformanceSupported()) {\r\n        return {};\r\n    }\r\n    // There is an open issue to type correctly getEntriesByType\r\n    // github.com/microsoft/TypeScript/issues/33866\r\n    // 这里直接的物理赋值performance.timing 已被弃用\r\n    const n = WP.getEntriesByType('navigation')[0];\r\n    // In Safari version 11.2 Navigation Timing isn't supported yet\r\n    if (!n) {\r\n        return {};\r\n    }\r\n    const responseStart = n.responseStart;\r\n    const responseEnd = n.responseEnd;\r\n    // We cache the navigation time for future times\r\n    return {\r\n        // fetchStart marks when the browser starts to fetch a resource\r\n        // responseEnd is when the last byte of the response arrives\r\n        fetchTime: responseEnd - n.fetchStart,\r\n        // Service worker time plus response time\r\n        workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\r\n        // Request plus response time (network only)\r\n        totalTime: responseEnd - n.requestStart,\r\n        // Response time only (download)\r\n        downloadTime: responseEnd - responseStart,\r\n        // Time to First Byte (TTFB)\r\n        timeToFirstByte: responseStart - n.requestStart,\r\n        // HTTP header size\r\n        headerSize: n.transferSize - n.encodedBodySize || 0,\r\n        //DNS解析时间\r\n        dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\r\n        //TCP建立时间\r\n        tcpTime: n.connectEnd - n.connectStart || 0,\r\n        // 白屏时间\r\n        whiteTime: n.responseStart - n.navigationStart || 0,\r\n        //dom渲染完成时间\r\n        domTime: n.domContentLoadedEventEnd - n.navigationStart || 0,\r\n        //页面onload时间\r\n        loadTime: n.loadEventEnd - n.navigationStart || 0,\r\n        //页面解析dom耗时\r\n        parseDomTime: n.domComplete - n.domInteractive || 0,\r\n    };\r\n};\r\n//# sourceMappingURL=getNavigationTiming.js.map","references":["/Users/wangyuan/Desktop/hiker-monitor/src/data/constants.ts","/Users/wangyuan/Desktop/hiker-monitor/src/helpers/isSupported.ts","/Users/wangyuan/Desktop/hiker-monitor/src/typings/types.ts"],"map":"{\"version\":3,\"file\":\"getNavigationTiming.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/performance/getNavigationTiming.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,mBAAmB,CAAC;AACvC,OAAO,EAAE,sBAAsB,EAAE,MAAM,wBAAwB,CAAC;AAGhE;;;;GAIG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAA4B,EAAE;IAC/D,IAAI,CAAC,sBAAsB,EAAE,EAAE;QAC7B,OAAO,EAAE,CAAC;KACX;IACD,4DAA4D;IAC5D,+CAA+C;IAC/C,mCAAmC;IACnC,MAAM,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAQ,CAAC;IACtD,+DAA+D;IAC/D,IAAI,CAAC,CAAC,EAAE;QACN,OAAO,EAAE,CAAC;KACX;IACD,MAAM,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;IACtC,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;IAClC,gDAAgD;IAChD,OAAO;QACL,+DAA+D;QAC/D,4DAA4D;QAC5D,SAAS,EAAE,WAAW,GAAG,CAAC,CAAC,UAAU;QACrC,yCAAyC;QACzC,UAAU,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC/D,4CAA4C;QAC5C,SAAS,EAAE,WAAW,GAAG,CAAC,CAAC,YAAY;QACvC,gCAAgC;QAChC,YAAY,EAAE,WAAW,GAAG,aAAa;QACzC,4BAA4B;QAC5B,eAAe,EAAE,aAAa,GAAG,CAAC,CAAC,YAAY;QAC/C,mBAAmB;QACnB,UAAU,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC;QACnD,SAAS;QACT,aAAa,EAAE,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,iBAAiB;QACtD,SAAS;QACT,OAAO,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,YAAY,IAAI,CAAC;QAC3C,OAAO;QACP,SAAS,EAAE,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC;QACnD,WAAW;QACX,OAAO,EAAE,CAAC,CAAC,wBAAwB,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC;QAC5D,YAAY;QACZ,QAAQ,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC;QACjD,WAAW;QACX,YAAY,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,cAAc,IAAI,CAAC;KACpD,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/wangyuan/Desktop/hiker-monitor/dist/performance/getNavigationTiming.d.ts","writeByteOrderMark":false,"text":"import { IYidengNavigationTiming } from '../typings/types';\r\n/**\r\n * Navigation Timing API provides performance metrics for HTML documents.\r\n * w3c.github.io/navigation-timing/\r\n * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\r\n */\r\nexport declare const getNavigationTiming: () => IYidengNavigationTiming;\r\n"}}
