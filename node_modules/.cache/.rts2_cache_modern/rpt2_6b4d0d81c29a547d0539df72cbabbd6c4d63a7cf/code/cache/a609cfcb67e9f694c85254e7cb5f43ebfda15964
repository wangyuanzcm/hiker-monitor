{"code":"import { logData, logMetric } from '../data/log';\r\nimport { cls, lcp, rt, tbt } from '../data/metrics';\r\nimport { perfObservers } from './observeInstances';\r\nimport { poDisconnect } from './performanceObserver';\r\nexport const initFirstInputDelay = (performanceEntries) => {\r\n    //取最后的一位即为我们希望所获取的时间点\r\n    const lastEntry = performanceEntries.pop();\r\n    if (lastEntry) {\r\n        // Core Web Vitals FID logic\r\n        // 测量输入事件的延迟操作\r\n        logMetric(lastEntry.processingStart - lastEntry.startTime, 'fidVitals', {\r\n            performanceEntry: lastEntry,\r\n        });\r\n        // 传统的FID逻辑\r\n        // Measure the duration of processing the first input event\r\n        logMetric(lastEntry.duration, 'fid', {\r\n            performanceEntry: lastEntry,\r\n        });\r\n    }\r\n    // 销毁对FID的注册回调 避免过多的观察者造成内存泄露\r\n    poDisconnect(1);\r\n    //初始化lcp\r\n    logMetric(lcp.value, 'lcp');\r\n    if (perfObservers[3] && typeof perfObservers[3].takeRecords === 'function') {\r\n        perfObservers[3].takeRecords();\r\n    }\r\n    logMetric(cls.value, 'cls');\r\n    logMetric(tbt.value, 'tbt');\r\n    // TBT with 5 second delay after FID\r\n    setTimeout(() => {\r\n        logMetric(tbt.value, `tbt5S`);\r\n    }, 5000);\r\n    // TBT with 10 second delay after FID\r\n    setTimeout(() => {\r\n        logMetric(tbt.value, `tbt10S`);\r\n        //FID被激活以后10S的整体数据消耗\r\n        logData('dataConsumption', rt.value);\r\n    }, 10000);\r\n};\r\n//# sourceMappingURL=firstInput.js.map","references":["/Users/wangyuan/Desktop/hiker-monitor/src/data/log.ts","/Users/wangyuan/Desktop/hiker-monitor/src/data/metrics.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/observeInstances.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/performanceObserver.ts","/Users/wangyuan/Desktop/hiker-monitor/src/typings/types.ts"],"map":"{\"version\":3,\"file\":\"firstInput.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/performance/firstInput.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACjD,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAGrD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,kBAA4C,EAC5C,EAAE;IACF,qBAAqB;IACrB,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,EAAE,CAAC;IAC3C,IAAI,SAAS,EAAE;QACb,4BAA4B;QAC5B,cAAc;QACd,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE;YACtE,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC;QACH,WAAW;QACX,2DAA2D;QAC3D,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE;YACnC,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC;KACJ;IACD,6BAA6B;IAC7B,YAAY,CAAC,CAAC,CAAC,CAAC;IAChB,QAAQ;IACR,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5B,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,UAAU,EAAE;QAC1E,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;KAChC;IACD,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5B,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5B,oCAAoC;IACpC,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,qCAAqC;IACrC,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/B,oBAAoB;QACpB,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC,EAAE,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC\"}","dts":{"name":"/Users/wangyuan/Desktop/hiker-monitor/dist/performance/firstInput.d.ts","writeByteOrderMark":false,"text":"import { PerformanceEventTiming } from '../typings/types';\r\nexport declare const initFirstInputDelay: (performanceEntries: PerformanceEventTiming[]) => void;\r\n"}}
