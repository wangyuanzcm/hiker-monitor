{"code":"import { config } from '../config';\r\nimport { logMetric } from '../data/log';\r\nimport { cls, lcp, tbt } from '../data/metrics';\r\nimport { initLayoutShift } from './cumulativeLayoutShift';\r\nimport { initFirstInputDelay } from './firstInput';\r\nimport { perfObservers } from './observeInstances';\r\nimport { initElementTiming, initFirstPaint, initLargestContentfulPaint, } from './paint';\r\nimport { po, poDisconnect } from './performanceObserver';\r\nimport { initResourceTiming } from './resourceTiming';\r\nexport const initPerformanceObserver = () => {\r\n    console.log('⏰ 性能收集开始', Math.random());\r\n    perfObservers[0] = po('paint', initFirstPaint);\r\n    perfObservers[1] = po('first-input', initFirstInputDelay);\r\n    perfObservers[2] = po('largest-contentful-paint', initLargestContentfulPaint);\r\n    //收集页面全部资源性能数据\r\n    if (config.isResourceTiming) {\r\n        console.log('📚 收集页面性能数据');\r\n        po('resource', initResourceTiming);\r\n    }\r\n    perfObservers[3] = po('layout-shift', initLayoutShift);\r\n    if (config.isElementTiming) {\r\n        po('element', initElementTiming);\r\n    }\r\n};\r\nexport const disconnectPerfObserversHidden = () => {\r\n    if (perfObservers[2]) {\r\n        logMetric(lcp.value, `lcpFinal`);\r\n        poDisconnect(2);\r\n    }\r\n    if (perfObservers[3]) {\r\n        if (typeof perfObservers[3].takeRecords === 'function') {\r\n            perfObservers[3].takeRecords();\r\n        }\r\n        logMetric(cls.value, `clsFinal`);\r\n        poDisconnect(3);\r\n    }\r\n    if (perfObservers[4]) {\r\n        logMetric(tbt.value, `tbtFinal`);\r\n        poDisconnect(4);\r\n    }\r\n};\r\n//# sourceMappingURL=observe.js.map","references":["/Users/wangyuan/Desktop/hiker-monitor/src/config/index.ts","/Users/wangyuan/Desktop/hiker-monitor/src/data/log.ts","/Users/wangyuan/Desktop/hiker-monitor/src/data/metrics.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/cumulativeLayoutShift.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/firstInput.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/observeInstances.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/paint.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/performanceObserver.ts","/Users/wangyuan/Desktop/hiker-monitor/src/performance/resourceTiming.ts"],"map":"{\"version\":3,\"file\":\"observe.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/performance/observe.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EACL,iBAAiB,EACjB,cAAc,EACd,0BAA0B,GAC3B,MAAM,SAAS,CAAC;AACjB,OAAO,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AACtD,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAS,EAAE;IAChD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACvC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAC/C,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;IAC1D,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,0BAA0B,EAAE,0BAA0B,CAAC,CAAC;IAC9E,cAAc;IACd,IAAI,MAAM,CAAC,gBAAgB,EAAE;QAC3B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,EAAE,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;KACpC;IACD,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;IACvD,IAAI,MAAM,CAAC,eAAe,EAAE;QAC1B,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;KAClC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG,GAAS,EAAE;IACtD,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;QACpB,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACjC,YAAY,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;QACpB,IAAI,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,UAAU,EAAE;YACtD,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAChC;QACD,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACjC,YAAY,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;QACpB,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACjC,YAAY,CAAC,CAAC,CAAC,CAAC;KACjB;AACH,CAAC,CAAC\"}","dts":{"name":"/Users/wangyuan/Desktop/hiker-monitor/dist/performance/observe.d.ts","writeByteOrderMark":false,"text":"export declare const initPerformanceObserver: () => void;\r\nexport declare const disconnectPerfObserversHidden: () => void;\r\n"}}
