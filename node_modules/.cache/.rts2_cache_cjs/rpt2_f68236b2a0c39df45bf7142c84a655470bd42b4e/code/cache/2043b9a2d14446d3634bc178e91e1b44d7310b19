{"code":"import { logData } from './log';\r\nimport { convertToKB } from '../helpers/utils';\r\n/**\r\n * The estimate() method of the StorageManager interface asks the Storage Manager\r\n * for how much storage the app takes up (usage),\r\n * and how much space is available (quota).\r\n */\r\nexport const reportStorageEstimate = (storageInfo) => {\r\n    const estimateUsageDetails = 'usageDetails' in storageInfo ? storageInfo.usageDetails : {};\r\n    logData('storageEstimate', {\r\n        quota: convertToKB(storageInfo.quota),\r\n        usage: convertToKB(storageInfo.usage),\r\n        caches: convertToKB(estimateUsageDetails.caches),\r\n        indexedDB: convertToKB(estimateUsageDetails.indexedDB),\r\n        serviceWorker: convertToKB(estimateUsageDetails.serviceWorkerRegistrations),\r\n    });\r\n};\r\n//# sourceMappingURL=storageEstimate.js.map","references":["/Users/wangyuan/Desktop/hiker-monitor/src/data/log.ts","/Users/wangyuan/Desktop/hiker-monitor/src/helpers/utils.ts"],"map":"{\"version\":3,\"file\":\"storageEstimate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/data/storageEstimate.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAChC,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C;;;;GAIG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,WAA4B,EAAE,EAAE;IACpE,MAAM,oBAAoB,GACxB,cAAc,IAAI,WAAW,CAAC,CAAC,CAAE,WAAmB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE,OAAO,CAAC,iBAAiB,EAAE;QACzB,KAAK,EAAE,WAAW,CAAE,WAAmB,CAAC,KAAK,CAAC;QAC9C,KAAK,EAAE,WAAW,CAAE,WAAmB,CAAC,KAAK,CAAC;QAC9C,MAAM,EAAE,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC;QAChD,SAAS,EAAE,WAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC;QACtD,aAAa,EAAE,WAAW,CAAC,oBAAoB,CAAC,0BAA0B,CAAC;KAC5E,CAAC,CAAC;AACL,CAAC,CAAC\"}","dts":{"name":"/Users/wangyuan/Desktop/hiker-monitor/dist/data/storageEstimate.d.ts","writeByteOrderMark":false,"text":"/**\r\n * The estimate() method of the StorageManager interface asks the Storage Manager\r\n * for how much storage the app takes up (usage),\r\n * and how much space is available (quota).\r\n */\r\nexport declare const reportStorageEstimate: (storageInfo: StorageEstimate) => void;\r\n"}}
